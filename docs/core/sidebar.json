{
	"id": 0,
	"name": "@numty/core",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "IComparable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Defines a generalized comparison method that\na value type or class implements to create a\ntype-specific comparison method for ordering\nor sorting its instances."
			},
			"typeParameter": [
				{
					"id": 2,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"children": [
				{
					"id": 3,
					"name": "compareTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 4,
							"name": "compareTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Compares the current instance with another object of the same\ntype and returns an integer that indicates whether the current\ninstance precedes, follows, or occurs in the same position in\nthe sort order as the other object.",
								"returns": "\nA value that indicates the relative order of the objects being compared.\nThe return value has these meanings:\n\nValue              |\tMeaning\n------------------ | --------\nLess than zero\t    | This instance precedes other in the sort order.\nZero               |\tThis instance occurs in the same position in the sort order as other.\nGreater than zero\t| This instance follows other in the sort order.\n"
							},
							"parameters": [
								{
									"id": 5,
									"name": "other",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "An object to compare with this instance.\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/basic-types/comparable.ts",
							"line": 28,
							"character": 11
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/basic-types/comparable.ts",
					"line": 9,
					"character": 28
				}
			]
		},
		{
			"id": 7,
			"name": "IEquatable",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Defines a generalized method that a value type or class\nimplements to create a type-specific method for determining equality of instances."
			},
			"typeParameter": [
				{
					"id": 8,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"children": [
				{
					"id": 9,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 10,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Indicates whether the current object is equal\nto another object of the same type."
							},
							"parameters": [
								{
									"id": 11,
									"name": "other",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "an object to compare with this object.\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 12,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Indicates whether the object is equal\nto another object of the same type."
							},
							"parameters": [
								{
									"id": 13,
									"name": "obj1",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "an object to compare"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								},
								{
									"id": 14,
									"name": "obj2",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "an object to compare\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/basic-types/equatable.ts",
							"line": 13,
							"character": 8
						},
						{
							"fileName": "packages/core/src/basic-types/equatable.ts",
							"line": 22,
							"character": 8
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						9
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/basic-types/equatable.ts",
					"line": 7,
					"character": 27
				}
			]
		},
		{
			"id": 15,
			"name": "IHasHashCode",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Defines a generalized method that a value type or class\nimplements to create a method for generating a hash code\nfor the current object."
			},
			"children": [
				{
					"id": 16,
					"name": "getHashCode",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 17,
							"name": "getHashCode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Return a hash code for the current object."
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"sources": [
						{
							"fileName": "packages/core/src/basic-types/has-hash-code.ts",
							"line": 12,
							"character": 13
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						16
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/basic-types/has-hash-code.ts",
					"line": 8,
					"character": 29
				}
			]
		},
		{
			"id": 18,
			"name": "Matrix",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type representing a collection of numbers in two dimensions."
			},
			"indexSignature": [
				{
					"id": 191,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type representing a collection of numbers in two dimensions."
					},
					"parameters": [
						{
							"id": 192,
							"name": "n",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 193,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "Array"
					}
				}
			],
			"children": [
				{
					"id": 193,
					"name": "Array",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1403,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ArrayConstructor"
					},
					"extendedBy": [
						{
							"type": "reference",
							"id": 18,
							"name": "Matrix"
						},
						{
							"type": "reference",
							"id": 254,
							"name": "Shape"
						},
						{
							"type": "reference",
							"id": 490,
							"name": "Vector"
						}
					]
				},
				{
					"id": 19,
					"name": "length",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Gets or sets the length of the array. This is a number one higher than the highest element defined in an array."
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1224,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 19,
						"name": "Array.length"
					}
				},
				{
					"id": 232,
					"name": "[Symbol.iterator]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 233,
							"name": "[Symbol.iterator]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Iterator"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 232,
								"name": "Array.[Symbol.iterator]"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 60,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "Array.[Symbol.iterator]"
					}
				},
				{
					"id": 240,
					"name": "[Symbol.unscopables]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 241,
							"name": "[Symbol.unscopables]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 242,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 243,
											"name": "copyWithin",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 95,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 244,
											"name": "entries",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 96,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 245,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 97,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 246,
											"name": "find",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 98,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 247,
											"name": "findIndex",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 99,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 248,
											"name": "keys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 100,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 249,
											"name": "values",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 101,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												243,
												244,
												245,
												246,
												247,
												248,
												249
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
											"line": 94,
											"character": 27
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 240,
								"name": "Array.[Symbol.unscopables]"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 94,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "Array.[Symbol.unscopables]"
					}
				},
				{
					"id": 29,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 30,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Combines two or more arrays."
							},
							"parameters": [
								{
									"id": 31,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Additional items to add to the end of array1.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 193,
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "number"
														}
													],
													"name": "Array"
												}
											],
											"name": "ConcatArray"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 29,
								"name": "Array.concat"
							}
						},
						{
							"id": 32,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Combines two or more arrays."
							},
							"parameters": [
								{
									"id": 33,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Additional items to add to the end of array1.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "unknown",
													"name": "T"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "unknown",
															"name": "T"
														}
													],
													"name": "ConcatArray"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 29,
								"name": "Array.concat"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1246,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1251,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 29,
						"name": "Array.concat"
					}
				},
				{
					"id": 227,
					"name": "copyWithin",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 228,
							"name": "copyWithin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target"
							},
							"parameters": [
								{
									"id": 229,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If target is negative, it is treated as length+target where length is the\nlength of the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 230,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 231,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "If not specified, length of the this object is used as its default value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 227,
								"name": "Array.copyWithin"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 64,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "Array.copyWithin"
					}
				},
				{
					"id": 234,
					"name": "entries",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 235,
							"name": "entries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an iterable of key, value pairs for every entry in the array"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "tuple"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 234,
								"name": "Array.entries"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 65,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "Array.entries"
					}
				},
				{
					"id": 71,
					"name": "every",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 72,
							"name": "every",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether all the members of an array satisfy the specified test."
							},
							"typeParameter": [
								{
									"id": 73,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								}
							],
							"parameters": [
								{
									"id": 74,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 75,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 76,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 77,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 78,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 79,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "typeParameter",
															"name": "S",
															"constraint": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1319,
													"character": 33
												}
											]
										}
									}
								},
								{
									"id": 80,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "S",
										"constraint": {
											"type": "reference",
											"id": 193,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											],
											"name": "Array"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 71,
								"name": "Array.every"
							}
						},
						{
							"id": 81,
							"name": "every",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether all the members of an array satisfy the specified test."
							},
							"parameters": [
								{
									"id": 82,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 83,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 84,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 85,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 86,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 87,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1328,
													"character": 20
												}
											]
										}
									}
								},
								{
									"id": 88,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 71,
								"name": "Array.every"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1319,
							"character": 9
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1328,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 71,
						"name": "Array.every"
					}
				},
				{
					"id": 222,
					"name": "fill",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 223,
							"name": "fill",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the this object after filling the section identified by start and end with value"
							},
							"parameters": [
								{
									"id": 224,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "value to fill array section with"
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								},
								{
									"id": 225,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 226,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "index to stop filling the array at. If end is negative, it is treated as\nlength+end.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 222,
								"name": "Array.fill"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 53,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "Array.fill"
					}
				},
				{
					"id": 117,
					"name": "filter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 118,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
							},
							"typeParameter": [
								{
									"id": 119,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								}
							],
							"parameters": [
								{
									"id": 120,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 121,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 122,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 123,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 124,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 125,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "typeParameter",
															"name": "S",
															"constraint": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1355,
													"character": 34
												}
											]
										}
									}
								},
								{
									"id": 126,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "S",
									"constraint": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 117,
								"name": "Array.filter"
							}
						},
						{
							"id": 127,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
							},
							"parameters": [
								{
									"id": 128,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 129,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 130,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 131,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 132,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 133,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1361,
													"character": 21
												}
											]
										}
									}
								},
								{
									"id": 134,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 117,
								"name": "Array.filter"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1355,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1361,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 117,
						"name": "Array.filter"
					}
				},
				{
					"id": 194,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 195,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise."
							},
							"typeParameter": [
								{
									"id": 196,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								}
							],
							"parameters": [
								{
									"id": 197,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 198,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 199,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 200,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														},
														{
															"id": 201,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 202,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 203,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "typeParameter",
															"name": "S",
															"constraint": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 31,
													"character": 32
												}
											]
										}
									}
								},
								{
									"id": 204,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "S",
										"constraint": {
											"type": "reference",
											"id": 193,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											],
											"name": "Array"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 194,
								"name": "Array.find"
							}
						},
						{
							"id": 205,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 206,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 207,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 208,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 209,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 210,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 211,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 32,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 212,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 194,
								"name": "Array.find"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 31,
							"character": 8
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 32,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 194,
						"name": "Array.find"
					}
				},
				{
					"id": 213,
					"name": "findIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 214,
							"name": "findIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the index of the first element in the array where predicate is true, and -1\notherwise."
							},
							"parameters": [
								{
									"id": 215,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 216,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 217,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 218,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 219,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 220,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 43,
													"character": 24
												}
											]
										}
									}
								},
								{
									"id": 221,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 213,
								"name": "Array.findIndex"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 43,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 213,
						"name": "Array.findIndex"
					}
				},
				{
					"id": 98,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 99,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Performs the specified action for each element in an array."
							},
							"parameters": [
								{
									"id": 100,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 101,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 102,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 103,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 104,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 105,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1343,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 106,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 98,
								"name": "Array.forEach"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1343,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 98,
						"name": "Array.forEach"
					}
				},
				{
					"id": 250,
					"name": "includes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 251,
							"name": "includes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether an array includes a certain element, returning true or false as appropriate."
							},
							"parameters": [
								{
									"id": 252,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The element to search for."
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								},
								{
									"id": 253,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The position in this array at which to begin searching for searchElement.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 250,
								"name": "Array.includes"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
							"line": 27,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "Array.includes"
					}
				},
				{
					"id": 63,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 64,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the index of the first occurrence of a value in an array."
							},
							"parameters": [
								{
									"id": 65,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The value to locate in the array."
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								},
								{
									"id": 66,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 63,
								"name": "Array.indexOf"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1304,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 63,
						"name": "Array.indexOf"
					}
				},
				{
					"id": 34,
					"name": "join",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 35,
							"name": "join",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Adds all the elements of an array separated by the specified separator string."
							},
							"parameters": [
								{
									"id": 36,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 34,
								"name": "Array.join"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1256,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Array.join"
					}
				},
				{
					"id": 236,
					"name": "keys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 237,
							"name": "keys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an iterable of keys in the array"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 236,
								"name": "Array.keys"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 70,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "Array.keys"
					}
				},
				{
					"id": 67,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 68,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the index of the last occurrence of a specified value in an array."
							},
							"parameters": [
								{
									"id": 69,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The value to locate in the array."
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								},
								{
									"id": 70,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 67,
								"name": "Array.lastIndexOf"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1310,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 67,
						"name": "Array.lastIndexOf"
					}
				},
				{
					"id": 107,
					"name": "map",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 108,
							"name": "map",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
							},
							"typeParameter": [
								{
									"id": 109,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 110,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 111,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 112,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 113,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 114,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 115,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "U"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1349,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 116,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "U"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 107,
								"name": "Array.map"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1349,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 107,
						"name": "Array.map"
					}
				},
				{
					"id": 24,
					"name": "pop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 25,
							"name": "pop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes the last element from an array and returns it."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "Array.pop"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1236,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 24,
						"name": "Array.pop"
					}
				},
				{
					"id": 26,
					"name": "push",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 27,
							"name": "push",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Appends new elements to an array, and returns the new length of the array."
							},
							"parameters": [
								{
									"id": 28,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "New elements of the Array.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 193,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											],
											"name": "Array"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 26,
								"name": "Array.push"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1241,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 26,
						"name": "Array.push"
					}
				},
				{
					"id": 135,
					"name": "reduce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 136,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"parameters": [
								{
									"id": 137,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 138,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 139,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 140,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 141,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 142,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 143,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 193,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														],
														"name": "Array"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1367,
													"character": 22
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 193,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Array"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "Array.reduce"
							}
						},
						{
							"id": 144,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 145,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 146,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 147,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 148,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 149,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 150,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 151,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 193,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														],
														"name": "Array"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1368,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 152,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 193,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Array"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "Array.reduce"
							}
						},
						{
							"id": 153,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"typeParameter": [
								{
									"id": 154,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 155,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 156,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 157,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 158,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "typeParameter",
																"name": "U"
															}
														},
														{
															"id": 159,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 160,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 161,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "U"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1374,
													"character": 25
												}
											]
										}
									}
								},
								{
									"id": 162,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "U"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "U"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "Array.reduce"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1367,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1368,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1374,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 135,
						"name": "Array.reduce"
					}
				},
				{
					"id": 163,
					"name": "reduceRight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 164,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"parameters": [
								{
									"id": 165,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 166,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 167,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 168,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 169,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 170,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 171,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 193,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														],
														"name": "Array"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1380,
													"character": 27
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 193,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Array"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 172,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 173,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 174,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 175,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 176,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 177,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 178,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 179,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"id": 193,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														],
														"name": "Array"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1381,
													"character": 27
												}
											]
										}
									}
								},
								{
									"id": 180,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 193,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Array"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 181,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"typeParameter": [
								{
									"id": 182,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 183,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 184,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 185,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 186,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "typeParameter",
																"name": "U"
															}
														},
														{
															"id": 187,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 188,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 189,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "U"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1387,
													"character": 30
												}
											]
										}
									}
								},
								{
									"id": 190,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "U"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "U"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "Array.reduceRight"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1380,
							"character": 15
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1381,
							"character": 15
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1387,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 163,
						"name": "Array.reduceRight"
					}
				},
				{
					"id": 37,
					"name": "reverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 38,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Reverses the elements in an Array."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 37,
								"name": "Array.reverse"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1260,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Array.reverse"
					}
				},
				{
					"id": 39,
					"name": "shift",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 40,
							"name": "shift",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes the first element from an array and returns it."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 39,
								"name": "Array.shift"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1264,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 39,
						"name": "Array.shift"
					}
				},
				{
					"id": 41,
					"name": "slice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 42,
							"name": "slice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns a section of an array."
							},
							"parameters": [
								{
									"id": 43,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The beginning of the specified portion of the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 44,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 41,
								"name": "Array.slice"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1270,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Array.slice"
					}
				},
				{
					"id": 89,
					"name": "some",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 90,
							"name": "some",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether the specified callback function returns true for any element of an array."
							},
							"parameters": [
								{
									"id": 91,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 92,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 93,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 94,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 95,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 96,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 193,
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "number"
																		}
																	],
																	"name": "Array"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1337,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 97,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 89,
								"name": "Array.some"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1337,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 89,
						"name": "Array.some"
					}
				},
				{
					"id": 45,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 46,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Sorts an array."
							},
							"parameters": [
								{
									"id": 47,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Function used to determine the order of the elements. It is expected to return\na negative value if first argument is less than second argument, zero if they're equal and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 48,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 49,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 50,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														},
														{
															"id": 51,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "reference",
																"id": 193,
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "Array"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1280,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 45,
								"name": "Array.sort"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1280,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Array.sort"
					}
				},
				{
					"id": 52,
					"name": "splice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 53,
							"name": "splice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
							},
							"parameters": [
								{
									"id": 54,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The zero-based location in the array from which to start removing elements."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 55,
									"name": "deleteCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The number of elements to remove.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 52,
								"name": "Array.splice"
							}
						},
						{
							"id": 56,
							"name": "splice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
							},
							"parameters": [
								{
									"id": 57,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The zero-based location in the array from which to start removing elements."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 58,
									"name": "deleteCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The number of elements to remove."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 59,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Elements to insert into the array in place of the deleted elements.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 193,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											],
											"name": "Array"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"id": 193,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 52,
								"name": "Array.splice"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1286,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1293,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 52,
						"name": "Array.splice"
					}
				},
				{
					"id": 22,
					"name": "toLocaleString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 23,
							"name": "toLocaleString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns a string representation of an array. The elements are converted to string using their toLocalString methods."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Array.toLocaleString"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1232,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 22,
						"name": "Array.toLocaleString"
					}
				},
				{
					"id": 20,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 21,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns a string representation of an array."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 20,
								"name": "Array.toString"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1228,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 20,
						"name": "Array.toString"
					}
				},
				{
					"id": 60,
					"name": "unshift",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 61,
							"name": "unshift",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Inserts new elements at the start of an array."
							},
							"parameters": [
								{
									"id": 62,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Elements to insert at the start of the Array.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 193,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											],
											"name": "Array"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "Array.unshift"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1298,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Array.unshift"
					}
				},
				{
					"id": 238,
					"name": "values",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 239,
							"name": "values",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an iterable of values in the array"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 193,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 238,
								"name": "Array.values"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 75,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "Array.values"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						193,
						19
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						232,
						240,
						29,
						227,
						234,
						71,
						222,
						117,
						194,
						213,
						98,
						250,
						63,
						34,
						236,
						67,
						107,
						24,
						26,
						135,
						163,
						37,
						39,
						41,
						89,
						45,
						52,
						22,
						20,
						60,
						238
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/basic-types/matrix.ts",
					"line": 7,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 193,
					"typeArguments": [
						{
							"type": "reference",
							"id": 193,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "Array"
						}
					],
					"name": "Array"
				}
			]
		},
		{
			"id": 254,
			"name": "Shape",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type representing array shape.\nThe array shape is actually array of numbers that\ngive the lengths of the corresponding array dimensions."
			},
			"indexSignature": [
				{
					"id": 427,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type representing array shape.\nThe array shape is actually array of numbers that\ngive the lengths of the corresponding array dimensions."
					},
					"parameters": [
						{
							"id": 428,
							"name": "n",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"children": [
				{
					"id": 429,
					"name": "Array",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1403,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ArrayConstructor"
					}
				},
				{
					"id": 255,
					"name": "length",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Gets or sets the length of the array. This is a number one higher than the highest element defined in an array."
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1224,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 19,
						"name": "Array.length"
					}
				},
				{
					"id": 468,
					"name": "[Symbol.iterator]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 469,
							"name": "[Symbol.iterator]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Iterator"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 232,
								"name": "Array.[Symbol.iterator]"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 60,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "Array.[Symbol.iterator]"
					}
				},
				{
					"id": 476,
					"name": "[Symbol.unscopables]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 477,
							"name": "[Symbol.unscopables]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 478,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 479,
											"name": "copyWithin",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 95,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 480,
											"name": "entries",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 96,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 481,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 97,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 482,
											"name": "find",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 98,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 483,
											"name": "findIndex",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 99,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 484,
											"name": "keys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 100,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 485,
											"name": "values",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 101,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												479,
												480,
												481,
												482,
												483,
												484,
												485
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
											"line": 94,
											"character": 27
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 240,
								"name": "Array.[Symbol.unscopables]"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 94,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "Array.[Symbol.unscopables]"
					}
				},
				{
					"id": 265,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 266,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Combines two or more arrays."
							},
							"parameters": [
								{
									"id": 267,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Additional items to add to the end of array1.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											],
											"name": "ConcatArray"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 29,
								"name": "Array.concat"
							}
						},
						{
							"id": 268,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Combines two or more arrays."
							},
							"parameters": [
								{
									"id": 269,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Additional items to add to the end of array1.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "unknown",
													"name": "T"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "unknown",
															"name": "T"
														}
													],
													"name": "ConcatArray"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 29,
								"name": "Array.concat"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1246,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1251,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 29,
						"name": "Array.concat"
					}
				},
				{
					"id": 463,
					"name": "copyWithin",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 464,
							"name": "copyWithin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target"
							},
							"parameters": [
								{
									"id": 465,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If target is negative, it is treated as length+target where length is the\nlength of the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 466,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 467,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "If not specified, length of the this object is used as its default value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 227,
								"name": "Array.copyWithin"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 64,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "Array.copyWithin"
					}
				},
				{
					"id": 470,
					"name": "entries",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 471,
							"name": "entries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an iterable of key, value pairs for every entry in the array"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "tuple"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 234,
								"name": "Array.entries"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 65,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "Array.entries"
					}
				},
				{
					"id": 307,
					"name": "every",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 308,
							"name": "every",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether all the members of an array satisfy the specified test."
							},
							"typeParameter": [
								{
									"id": 309,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"parameters": [
								{
									"id": 310,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 311,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 312,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 313,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 314,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 315,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "typeParameter",
															"name": "S",
															"constraint": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1319,
													"character": 33
												}
											]
										}
									}
								},
								{
									"id": 316,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "S",
										"constraint": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 71,
								"name": "Array.every"
							}
						},
						{
							"id": 317,
							"name": "every",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether all the members of an array satisfy the specified test."
							},
							"parameters": [
								{
									"id": 318,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 319,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 320,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 321,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 322,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 323,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1328,
													"character": 20
												}
											]
										}
									}
								},
								{
									"id": 324,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 71,
								"name": "Array.every"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1319,
							"character": 9
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1328,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 71,
						"name": "Array.every"
					}
				},
				{
					"id": 458,
					"name": "fill",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 459,
							"name": "fill",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the this object after filling the section identified by start and end with value"
							},
							"parameters": [
								{
									"id": 460,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "value to fill array section with"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 461,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 462,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "index to stop filling the array at. If end is negative, it is treated as\nlength+end.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 222,
								"name": "Array.fill"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 53,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "Array.fill"
					}
				},
				{
					"id": 353,
					"name": "filter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 354,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
							},
							"typeParameter": [
								{
									"id": 355,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"parameters": [
								{
									"id": 356,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 357,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 358,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 359,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 360,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 361,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "typeParameter",
															"name": "S",
															"constraint": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1355,
													"character": 34
												}
											]
										}
									}
								},
								{
									"id": 362,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "S",
									"constraint": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 117,
								"name": "Array.filter"
							}
						},
						{
							"id": 363,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
							},
							"parameters": [
								{
									"id": 364,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 365,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 366,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 367,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 368,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 369,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1361,
													"character": 21
												}
											]
										}
									}
								},
								{
									"id": 370,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 117,
								"name": "Array.filter"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1355,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1361,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 117,
						"name": "Array.filter"
					}
				},
				{
					"id": 430,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 431,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise."
							},
							"typeParameter": [
								{
									"id": 432,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"parameters": [
								{
									"id": 433,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 434,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 435,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 436,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														},
														{
															"id": 437,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 438,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 439,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "typeParameter",
															"name": "S",
															"constraint": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 31,
													"character": 32
												}
											]
										}
									}
								},
								{
									"id": 440,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "S",
										"constraint": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 194,
								"name": "Array.find"
							}
						},
						{
							"id": 441,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 442,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 443,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 444,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 445,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 446,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 447,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 32,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 448,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 194,
								"name": "Array.find"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 31,
							"character": 8
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 32,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 194,
						"name": "Array.find"
					}
				},
				{
					"id": 449,
					"name": "findIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 450,
							"name": "findIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the index of the first element in the array where predicate is true, and -1\notherwise."
							},
							"parameters": [
								{
									"id": 451,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 452,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 453,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 454,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 455,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 456,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 43,
													"character": 24
												}
											]
										}
									}
								},
								{
									"id": 457,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 213,
								"name": "Array.findIndex"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 43,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 213,
						"name": "Array.findIndex"
					}
				},
				{
					"id": 334,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 335,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Performs the specified action for each element in an array."
							},
							"parameters": [
								{
									"id": 336,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 337,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 338,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 339,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 340,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 341,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1343,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 342,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 98,
								"name": "Array.forEach"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1343,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 98,
						"name": "Array.forEach"
					}
				},
				{
					"id": 486,
					"name": "includes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 487,
							"name": "includes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether an array includes a certain element, returning true or false as appropriate."
							},
							"parameters": [
								{
									"id": 488,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The element to search for."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 489,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The position in this array at which to begin searching for searchElement.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 250,
								"name": "Array.includes"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
							"line": 27,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "Array.includes"
					}
				},
				{
					"id": 299,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 300,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the index of the first occurrence of a value in an array."
							},
							"parameters": [
								{
									"id": 301,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The value to locate in the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 302,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 63,
								"name": "Array.indexOf"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1304,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 63,
						"name": "Array.indexOf"
					}
				},
				{
					"id": 270,
					"name": "join",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 271,
							"name": "join",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Adds all the elements of an array separated by the specified separator string."
							},
							"parameters": [
								{
									"id": 272,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 34,
								"name": "Array.join"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1256,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Array.join"
					}
				},
				{
					"id": 472,
					"name": "keys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 473,
							"name": "keys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an iterable of keys in the array"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 236,
								"name": "Array.keys"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 70,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "Array.keys"
					}
				},
				{
					"id": 303,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 304,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the index of the last occurrence of a specified value in an array."
							},
							"parameters": [
								{
									"id": 305,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The value to locate in the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 306,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 67,
								"name": "Array.lastIndexOf"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1310,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 67,
						"name": "Array.lastIndexOf"
					}
				},
				{
					"id": 343,
					"name": "map",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 344,
							"name": "map",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
							},
							"typeParameter": [
								{
									"id": 345,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 346,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 347,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 348,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 349,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 350,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 351,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "U"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1349,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 352,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "U"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 107,
								"name": "Array.map"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1349,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 107,
						"name": "Array.map"
					}
				},
				{
					"id": 260,
					"name": "pop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 261,
							"name": "pop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes the last element from an array and returns it."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "Array.pop"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1236,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 24,
						"name": "Array.pop"
					}
				},
				{
					"id": 262,
					"name": "push",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 263,
							"name": "push",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Appends new elements to an array, and returns the new length of the array."
							},
							"parameters": [
								{
									"id": 264,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "New elements of the Array.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 26,
								"name": "Array.push"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1241,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 26,
						"name": "Array.push"
					}
				},
				{
					"id": 371,
					"name": "reduce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 372,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"parameters": [
								{
									"id": 373,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 374,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 375,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 376,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 377,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 378,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 379,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1367,
													"character": 22
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "Array.reduce"
							}
						},
						{
							"id": 380,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 381,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 382,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 383,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 384,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 385,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 386,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 387,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1368,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 388,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "Array.reduce"
							}
						},
						{
							"id": 389,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"typeParameter": [
								{
									"id": 390,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 391,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 392,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 393,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 394,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "typeParameter",
																"name": "U"
															}
														},
														{
															"id": 395,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 396,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 397,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "U"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1374,
													"character": 25
												}
											]
										}
									}
								},
								{
									"id": 398,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "U"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "U"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "Array.reduce"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1367,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1368,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1374,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 135,
						"name": "Array.reduce"
					}
				},
				{
					"id": 399,
					"name": "reduceRight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 400,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"parameters": [
								{
									"id": 401,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 402,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 403,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 404,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 405,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 406,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 407,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1380,
													"character": 27
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 408,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 409,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 410,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 411,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 412,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 413,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 414,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 415,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1381,
													"character": 27
												}
											]
										}
									}
								},
								{
									"id": 416,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 417,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"typeParameter": [
								{
									"id": 418,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 419,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 420,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 421,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 422,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "typeParameter",
																"name": "U"
															}
														},
														{
															"id": 423,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 424,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 425,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "U"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1387,
													"character": 30
												}
											]
										}
									}
								},
								{
									"id": 426,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "U"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "U"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "Array.reduceRight"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1380,
							"character": 15
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1381,
							"character": 15
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1387,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 163,
						"name": "Array.reduceRight"
					}
				},
				{
					"id": 273,
					"name": "reverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 274,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Reverses the elements in an Array."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 37,
								"name": "Array.reverse"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1260,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Array.reverse"
					}
				},
				{
					"id": 275,
					"name": "shift",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 276,
							"name": "shift",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes the first element from an array and returns it."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 39,
								"name": "Array.shift"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1264,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 39,
						"name": "Array.shift"
					}
				},
				{
					"id": 277,
					"name": "slice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 278,
							"name": "slice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns a section of an array."
							},
							"parameters": [
								{
									"id": 279,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The beginning of the specified portion of the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 280,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 41,
								"name": "Array.slice"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1270,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Array.slice"
					}
				},
				{
					"id": 325,
					"name": "some",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 326,
							"name": "some",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether the specified callback function returns true for any element of an array."
							},
							"parameters": [
								{
									"id": 327,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 328,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 329,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 330,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 331,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 332,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1337,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 333,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 89,
								"name": "Array.some"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1337,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 89,
						"name": "Array.some"
					}
				},
				{
					"id": 281,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 282,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Sorts an array."
							},
							"parameters": [
								{
									"id": 283,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Function used to determine the order of the elements. It is expected to return\na negative value if first argument is less than second argument, zero if they're equal and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 284,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 285,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 286,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 287,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1280,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 45,
								"name": "Array.sort"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1280,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Array.sort"
					}
				},
				{
					"id": 288,
					"name": "splice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 289,
							"name": "splice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
							},
							"parameters": [
								{
									"id": 290,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The zero-based location in the array from which to start removing elements."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 291,
									"name": "deleteCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The number of elements to remove.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 52,
								"name": "Array.splice"
							}
						},
						{
							"id": 292,
							"name": "splice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
							},
							"parameters": [
								{
									"id": 293,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The zero-based location in the array from which to start removing elements."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 294,
									"name": "deleteCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The number of elements to remove."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 295,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Elements to insert into the array in place of the deleted elements.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 52,
								"name": "Array.splice"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1286,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1293,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 52,
						"name": "Array.splice"
					}
				},
				{
					"id": 258,
					"name": "toLocaleString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 259,
							"name": "toLocaleString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns a string representation of an array. The elements are converted to string using their toLocalString methods."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Array.toLocaleString"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1232,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 22,
						"name": "Array.toLocaleString"
					}
				},
				{
					"id": 256,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 257,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns a string representation of an array."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 20,
								"name": "Array.toString"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1228,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 20,
						"name": "Array.toString"
					}
				},
				{
					"id": 296,
					"name": "unshift",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 297,
							"name": "unshift",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Inserts new elements at the start of an array."
							},
							"parameters": [
								{
									"id": 298,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Elements to insert at the start of the Array.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "Array.unshift"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1298,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Array.unshift"
					}
				},
				{
					"id": 474,
					"name": "values",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 475,
							"name": "values",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an iterable of values in the array"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 238,
								"name": "Array.values"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 75,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "Array.values"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						429,
						255
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						468,
						476,
						265,
						463,
						470,
						307,
						458,
						353,
						430,
						449,
						334,
						486,
						299,
						270,
						472,
						303,
						343,
						260,
						262,
						371,
						399,
						273,
						275,
						277,
						325,
						281,
						288,
						258,
						256,
						296,
						474
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/basic-types/shape.ts",
					"line": 9,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 193,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Array"
				}
			]
		},
		{
			"id": 490,
			"name": "Vector",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Type representing a collection of numbers in one dimension."
			},
			"indexSignature": [
				{
					"id": 663,
					"name": "__index",
					"kind": 8192,
					"kindString": "Index signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Type representing a collection of numbers in one dimension."
					},
					"parameters": [
						{
							"id": 664,
							"name": "n",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"children": [
				{
					"id": 665,
					"name": "Array",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1403,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ArrayConstructor"
					}
				},
				{
					"id": 491,
					"name": "length",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Gets or sets the length of the array. This is a number one higher than the highest element defined in an array."
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1224,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 19,
						"name": "Array.length"
					}
				},
				{
					"id": 704,
					"name": "[Symbol.iterator]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 705,
							"name": "[Symbol.iterator]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Iterator"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 232,
								"name": "Array.[Symbol.iterator]"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 60,
							"character": 21
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 232,
						"name": "Array.[Symbol.iterator]"
					}
				},
				{
					"id": 712,
					"name": "[Symbol.unscopables]",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 713,
							"name": "[Symbol.unscopables]",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an object whose properties have the value 'true'\nwhen they will be absent when used in a 'with' statement."
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 714,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 715,
											"name": "copyWithin",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 95,
													"character": 18
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 716,
											"name": "entries",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 96,
													"character": 15
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 717,
											"name": "fill",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 97,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 718,
											"name": "find",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 98,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 719,
											"name": "findIndex",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 99,
													"character": 17
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 720,
											"name": "keys",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 100,
													"character": 12
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 721,
											"name": "values",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
													"line": 101,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												715,
												716,
												717,
												718,
												719,
												720,
												721
											]
										}
									],
									"sources": [
										{
											"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
											"line": 94,
											"character": 27
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 240,
								"name": "Array.[Symbol.unscopables]"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 94,
							"character": 24
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 240,
						"name": "Array.[Symbol.unscopables]"
					}
				},
				{
					"id": 501,
					"name": "concat",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 502,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Combines two or more arrays."
							},
							"parameters": [
								{
									"id": 503,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Additional items to add to the end of array1.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "number"
												}
											],
											"name": "ConcatArray"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 29,
								"name": "Array.concat"
							}
						},
						{
							"id": 504,
							"name": "concat",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Combines two or more arrays."
							},
							"parameters": [
								{
									"id": 505,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Additional items to add to the end of array1.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "unknown",
													"name": "T"
												},
												{
													"type": "reference",
													"typeArguments": [
														{
															"type": "unknown",
															"name": "T"
														}
													],
													"name": "ConcatArray"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 29,
								"name": "Array.concat"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1246,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1251,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 29,
						"name": "Array.concat"
					}
				},
				{
					"id": 699,
					"name": "copyWithin",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 700,
							"name": "copyWithin",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the this object after copying a section of the array identified by start and end\nto the same array starting at position target"
							},
							"parameters": [
								{
									"id": 701,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If target is negative, it is treated as length+target where length is the\nlength of the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 702,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If start is negative, it is treated as length+start. If end is negative, it\nis treated as length+end."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 703,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "If not specified, length of the this object is used as its default value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 227,
								"name": "Array.copyWithin"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 64,
							"character": 14
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 227,
						"name": "Array.copyWithin"
					}
				},
				{
					"id": 706,
					"name": "entries",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 707,
							"name": "entries",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an iterable of key, value pairs for every entry in the array"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "tuple"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 234,
								"name": "Array.entries"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 65,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 234,
						"name": "Array.entries"
					}
				},
				{
					"id": 543,
					"name": "every",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 544,
							"name": "every",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether all the members of an array satisfy the specified test."
							},
							"typeParameter": [
								{
									"id": 545,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"parameters": [
								{
									"id": 546,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 547,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 548,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 549,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 550,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 551,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "typeParameter",
															"name": "S",
															"constraint": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1319,
													"character": 33
												}
											]
										}
									}
								},
								{
									"id": 552,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "array",
									"elementType": {
										"type": "typeParameter",
										"name": "S",
										"constraint": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 71,
								"name": "Array.every"
							}
						},
						{
							"id": 553,
							"name": "every",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether all the members of an array satisfy the specified test."
							},
							"parameters": [
								{
									"id": 554,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The every method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value false, or until the end of the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 555,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 556,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 557,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 558,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 559,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1328,
													"character": 20
												}
											]
										}
									}
								},
								{
									"id": 560,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 71,
								"name": "Array.every"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1319,
							"character": 9
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1328,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 71,
						"name": "Array.every"
					}
				},
				{
					"id": 694,
					"name": "fill",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 695,
							"name": "fill",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the this object after filling the section identified by start and end with value"
							},
							"parameters": [
								{
									"id": 696,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "value to fill array section with"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 697,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "index to start filling the array at. If start is negative, it is treated as\nlength+start where length is the length of the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 698,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "index to stop filling the array at. If end is negative, it is treated as\nlength+end.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 222,
								"name": "Array.fill"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 53,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 222,
						"name": "Array.fill"
					}
				},
				{
					"id": 589,
					"name": "filter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 590,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
							},
							"typeParameter": [
								{
									"id": 591,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"parameters": [
								{
									"id": 592,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 593,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 594,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 595,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 596,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 597,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "typeParameter",
															"name": "S",
															"constraint": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1355,
													"character": 34
												}
											]
										}
									}
								},
								{
									"id": 598,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "S",
									"constraint": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 117,
								"name": "Array.filter"
							}
						},
						{
							"id": 599,
							"name": "filter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the elements of an array that meet the condition specified in a callback function."
							},
							"parameters": [
								{
									"id": 600,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 601,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 602,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 603,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 604,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 605,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1361,
													"character": 21
												}
											]
										}
									}
								},
								{
									"id": 606,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 117,
								"name": "Array.filter"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1355,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1361,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 117,
						"name": "Array.filter"
					}
				},
				{
					"id": 666,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 667,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the value of the first element in the array where predicate is true, and undefined\notherwise."
							},
							"typeParameter": [
								{
									"id": 668,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"parameters": [
								{
									"id": 669,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found, find\nimmediately returns that element value. Otherwise, find returns undefined."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 670,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 671,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 672,
															"name": "this",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														},
														{
															"id": 673,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 674,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 675,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "predicate",
														"name": "value",
														"asserts": false,
														"targetType": {
															"type": "typeParameter",
															"name": "S",
															"constraint": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 31,
													"character": 32
												}
											]
										}
									}
								},
								{
									"id": 676,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "typeParameter",
										"name": "S",
										"constraint": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 194,
								"name": "Array.find"
							}
						},
						{
							"id": 677,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 678,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 679,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 680,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 681,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 682,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 683,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 32,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 684,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 194,
								"name": "Array.find"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 31,
							"character": 8
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 32,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 194,
						"name": "Array.find"
					}
				},
				{
					"id": 685,
					"name": "findIndex",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 686,
							"name": "findIndex",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the index of the first element in the array where predicate is true, and -1\notherwise."
							},
							"parameters": [
								{
									"id": 687,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "find calls predicate once for each element of the array, in ascending\norder, until it finds one where predicate returns true. If such an element is found,\nfindIndex immediately returns that element index. Otherwise, findIndex returns -1."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 688,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 689,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 690,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 691,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 692,
															"name": "obj",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
													"line": 43,
													"character": 24
												}
											]
										}
									}
								},
								{
									"id": 693,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "If provided, it will be used as the this value for each invocation of\npredicate. If it is not provided, undefined is used instead.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 213,
								"name": "Array.findIndex"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.core.d.ts",
							"line": 43,
							"character": 13
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 213,
						"name": "Array.findIndex"
					}
				},
				{
					"id": 570,
					"name": "forEach",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 571,
							"name": "forEach",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Performs the specified action for each element in an array."
							},
							"parameters": [
								{
									"id": 572,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 573,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 574,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 575,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 576,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 577,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1343,
													"character": 23
												}
											]
										}
									}
								},
								{
									"id": 578,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 98,
								"name": "Array.forEach"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1343,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 98,
						"name": "Array.forEach"
					}
				},
				{
					"id": 722,
					"name": "includes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 723,
							"name": "includes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether an array includes a certain element, returning true or false as appropriate."
							},
							"parameters": [
								{
									"id": 724,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The element to search for."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 725,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The position in this array at which to begin searching for searchElement.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 250,
								"name": "Array.includes"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2016.array.include.d.ts",
							"line": 27,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 250,
						"name": "Array.includes"
					}
				},
				{
					"id": 535,
					"name": "indexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 536,
							"name": "indexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the index of the first occurrence of a value in an array."
							},
							"parameters": [
								{
									"id": 537,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The value to locate in the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 538,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 63,
								"name": "Array.indexOf"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1304,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 63,
						"name": "Array.indexOf"
					}
				},
				{
					"id": 506,
					"name": "join",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 507,
							"name": "join",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Adds all the elements of an array separated by the specified separator string."
							},
							"parameters": [
								{
									"id": 508,
									"name": "separator",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 34,
								"name": "Array.join"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1256,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 34,
						"name": "Array.join"
					}
				},
				{
					"id": 708,
					"name": "keys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 709,
							"name": "keys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an iterable of keys in the array"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 236,
								"name": "Array.keys"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 70,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 236,
						"name": "Array.keys"
					}
				},
				{
					"id": 539,
					"name": "lastIndexOf",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 540,
							"name": "lastIndexOf",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns the index of the last occurrence of a specified value in an array."
							},
							"parameters": [
								{
									"id": 541,
									"name": "searchElement",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The value to locate in the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 542,
									"name": "fromIndex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 67,
								"name": "Array.lastIndexOf"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1310,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 67,
						"name": "Array.lastIndexOf"
					}
				},
				{
					"id": 579,
					"name": "map",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 580,
							"name": "map",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls a defined callback function on each element of an array, and returns an array that contains the results."
							},
							"typeParameter": [
								{
									"id": 581,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 582,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 583,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 584,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 585,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 586,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 587,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "U"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1349,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 588,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "U"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 107,
								"name": "Array.map"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1349,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 107,
						"name": "Array.map"
					}
				},
				{
					"id": 496,
					"name": "pop",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 497,
							"name": "pop",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes the last element from an array and returns it."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 24,
								"name": "Array.pop"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1236,
							"character": 7
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 24,
						"name": "Array.pop"
					}
				},
				{
					"id": 498,
					"name": "push",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 499,
							"name": "push",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Appends new elements to an array, and returns the new length of the array."
							},
							"parameters": [
								{
									"id": 500,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "New elements of the Array.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 26,
								"name": "Array.push"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1241,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 26,
						"name": "Array.push"
					}
				},
				{
					"id": 607,
					"name": "reduce",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 608,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"parameters": [
								{
									"id": 609,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 610,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 611,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 612,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 613,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 614,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 615,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1367,
													"character": 22
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "Array.reduce"
							}
						},
						{
							"id": 616,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 617,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 618,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 619,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 620,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 621,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 622,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 623,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1368,
													"character": 22
												}
											]
										}
									}
								},
								{
									"id": 624,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "Array.reduce"
							}
						},
						{
							"id": 625,
							"name": "reduce",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"typeParameter": [
								{
									"id": 626,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 627,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 628,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 629,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 630,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "typeParameter",
																"name": "U"
															}
														},
														{
															"id": 631,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 632,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 633,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "U"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1374,
													"character": 25
												}
											]
										}
									}
								},
								{
									"id": 634,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "U"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "U"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 135,
								"name": "Array.reduce"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1367,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1368,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1374,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 135,
						"name": "Array.reduce"
					}
				},
				{
					"id": 635,
					"name": "reduceRight",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 636,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"parameters": [
								{
									"id": 637,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 638,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 639,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 640,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 641,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 642,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 643,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1380,
													"character": 27
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 644,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 645,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 646,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 647,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 648,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 649,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 650,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 651,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1381,
													"character": 27
												}
											]
										}
									}
								},
								{
									"id": 652,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "Array.reduceRight"
							}
						},
						{
							"id": 653,
							"name": "reduceRight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function."
							},
							"typeParameter": [
								{
									"id": 654,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									}
								}
							],
							"parameters": [
								{
									"id": 655,
									"name": "callbackfn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 656,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 657,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 658,
															"name": "previousValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "typeParameter",
																"name": "U"
															}
														},
														{
															"id": 659,
															"name": "currentValue",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 660,
															"name": "currentIndex",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 661,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "typeParameter",
														"name": "U"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1387,
													"character": 30
												}
											]
										}
									}
								},
								{
									"id": 662,
									"name": "initialValue",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n"
									},
									"type": {
										"type": "typeParameter",
										"name": "U"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "U"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 163,
								"name": "Array.reduceRight"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1380,
							"character": 15
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1381,
							"character": 15
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1387,
							"character": 15
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 163,
						"name": "Array.reduceRight"
					}
				},
				{
					"id": 509,
					"name": "reverse",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 510,
							"name": "reverse",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Reverses the elements in an Array."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 37,
								"name": "Array.reverse"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1260,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 37,
						"name": "Array.reverse"
					}
				},
				{
					"id": 511,
					"name": "shift",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 512,
							"name": "shift",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes the first element from an array and returns it."
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 39,
								"name": "Array.shift"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1264,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 39,
						"name": "Array.shift"
					}
				},
				{
					"id": 513,
					"name": "slice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 514,
							"name": "slice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns a section of an array."
							},
							"parameters": [
								{
									"id": 515,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The beginning of the specified portion of the array."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 516,
									"name": "end",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 41,
								"name": "Array.slice"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1270,
							"character": 9
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 41,
						"name": "Array.slice"
					}
				},
				{
					"id": 561,
					"name": "some",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 562,
							"name": "some",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Determines whether the specified callback function returns true for any element of an array."
							},
							"parameters": [
								{
									"id": 563,
									"name": "predicate",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "A function that accepts up to three arguments. The some method calls\nthe predicate function for each element in the array until the predicate returns a value\nwhich is coercible to the Boolean value true, or until the end of the array."
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 564,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 565,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 566,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 567,
															"name": "index",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 568,
															"name": "array",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1337,
													"character": 19
												}
											]
										}
									}
								},
								{
									"id": 569,
									"name": "thisArg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "An object to which the this keyword can refer in the predicate function.\nIf thisArg is omitted, undefined is used as the this value.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 89,
								"name": "Array.some"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1337,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 89,
						"name": "Array.some"
					}
				},
				{
					"id": 517,
					"name": "sort",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 518,
							"name": "sort",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Sorts an array."
							},
							"parameters": [
								{
									"id": 519,
									"name": "compareFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "Function used to determine the order of the elements. It is expected to return\na negative value if first argument is less than second argument, zero if they're equal and a positive\nvalue otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n```ts\n[11,2,22,1].sort((a, b) => a - b)\n```\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 520,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"signatures": [
												{
													"id": 521,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExported": true
													},
													"parameters": [
														{
															"id": 522,
															"name": "a",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 523,
															"name": "b",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"sources": [
												{
													"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
													"line": 1280,
													"character": 20
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 45,
								"name": "Array.sort"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1280,
							"character": 8
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 45,
						"name": "Array.sort"
					}
				},
				{
					"id": 524,
					"name": "splice",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 525,
							"name": "splice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
							},
							"parameters": [
								{
									"id": 526,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The zero-based location in the array from which to start removing elements."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 527,
									"name": "deleteCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"comment": {
										"text": "The number of elements to remove.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 52,
								"name": "Array.splice"
							}
						},
						{
							"id": 528,
							"name": "splice",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements."
							},
							"parameters": [
								{
									"id": 529,
									"name": "start",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The zero-based location in the array from which to start removing elements."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 530,
									"name": "deleteCount",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"comment": {
										"text": "The number of elements to remove."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 531,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Elements to insert into the array in place of the deleted elements.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 52,
								"name": "Array.splice"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1286,
							"character": 10
						},
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1293,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 52,
						"name": "Array.splice"
					}
				},
				{
					"id": 494,
					"name": "toLocaleString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 495,
							"name": "toLocaleString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns a string representation of an array. The elements are converted to string using their toLocalString methods."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 22,
								"name": "Array.toLocaleString"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1232,
							"character": 18
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 22,
						"name": "Array.toLocaleString"
					}
				},
				{
					"id": 492,
					"name": "toString",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 493,
							"name": "toString",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns a string representation of an array."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 20,
								"name": "Array.toString"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1228,
							"character": 12
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 20,
						"name": "Array.toString"
					}
				},
				{
					"id": 532,
					"name": "unshift",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 533,
							"name": "unshift",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Inserts new elements at the start of an array."
							},
							"parameters": [
								{
									"id": 534,
									"name": "items",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isRest": true
									},
									"comment": {
										"text": "Elements to insert at the start of the Array.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 60,
								"name": "Array.unshift"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1298,
							"character": 11
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 60,
						"name": "Array.unshift"
					}
				},
				{
					"id": 710,
					"name": "values",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 711,
							"name": "values",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Returns an iterable of values in the array"
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "IterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 238,
								"name": "Array.values"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.iterable.d.ts",
							"line": 75,
							"character": 10
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 238,
						"name": "Array.values"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						665,
						491
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						704,
						712,
						501,
						699,
						706,
						543,
						694,
						589,
						666,
						685,
						570,
						722,
						535,
						506,
						708,
						539,
						579,
						496,
						498,
						607,
						635,
						509,
						511,
						513,
						561,
						517,
						524,
						494,
						492,
						532,
						710
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/basic-types/vector.ts",
					"line": 7,
					"character": 23
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 193,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Array"
				}
			]
		},
		{
			"id": 6,
			"name": "DirectionOneD",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "Represents 1-D traverse direction\nleft to right or right to left"
			},
			"sources": [
				{
					"fileName": "packages/core/src/basic-types/direction.ts",
					"line": 7,
					"character": 25
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "ltr"
					},
					{
						"type": "stringLiteral",
						"value": "rtl"
					}
				]
			}
		},
		{
			"id": 780,
			"name": "arange",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 781,
					"name": "arange",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return spaced values within a given interval.\nValues are generated within the half-open interval [`start`, `stop`)\n(in other words, the interval including start but excluding stop)."
					},
					"parameters": [
						{
							"id": 782,
							"name": "start",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Start of interval. The interval includes this value. The default start value is 0.\nIf stop value is omitted, the start becomes 0 and this value becomes stop. For example\n`arange(3)` will return `[0, 1, 2]`"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 783,
							"name": "stop",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "End of interval. The interval does not include this value"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 784,
							"name": "step",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Spacing between values. For any return value,\nthis is the distance between two adjacent values, out[i+1] - out[i]. The default step size is 1\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "1"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/numerical-ranges/arange.ts",
					"line": 15,
					"character": 22
				}
			]
		},
		{
			"id": 822,
			"name": "around",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 823,
					"name": "around",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Round array items to the given number of decimals\non an element-wise basis."
					},
					"parameters": [
						{
							"id": 824,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Input data"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 825,
							"name": "decimals",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Number of decimal places to round to (default: 0).\nIf decimals is negative, it specifies the number of positions to the left of the decimal point.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/mathematical/rounding/around.ts",
					"line": 13,
					"character": 22
				}
			]
		},
		{
			"id": 826,
			"name": "ceil",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 827,
					"name": "ceil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the ceiling of the input, element-wise."
					},
					"parameters": [
						{
							"id": 828,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Input array\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/mathematical/rounding/ceil.ts",
					"line": 8,
					"character": 20
				}
			]
		},
		{
			"id": 808,
			"name": "compareNumbers",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 809,
					"name": "compareNumbers",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Compares two numbers and returns an integer that indicates whether the current\ninstance precedes, follows, or occurs in the same position in\nthe sort order as the other object.",
						"returns": "\nA value that indicates the relative order of the objects being compared.\nThe return value has these meanings:\n\nValue              |\tMeaning\n------------------ | --------\nLess than zero\t    | This instance precedes other in the sort order.\nZero               |\tThis instance occurs in the same position in the sort order as other.\nGreater than zero\t| This instance follows other in the sort order.\n"
					},
					"parameters": [
						{
							"id": 810,
							"name": "n1",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "number to compare"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 811,
							"name": "n2",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "number to compare"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/logic/comparison/compareNumbers.ts",
					"line": 20,
					"character": 30
				}
			]
		},
		{
			"id": 743,
			"name": "empty",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 744,
					"name": "empty",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return a new array of given shape filled\nwith `null`"
					},
					"parameters": [
						{
							"id": 745,
							"name": "sh",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 254,
								"name": "Shape"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/ones-and-zeros/empty.ts",
					"line": 12,
					"character": 21
				}
			]
		},
		{
			"id": 752,
			"name": "eye",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 753,
					"name": "eye",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return a 2-D array with ones on the diagonal and zeros elsewhere."
					},
					"parameters": [
						{
							"id": 754,
							"name": "rows",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 755,
							"name": "columns",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "rows"
						},
						{
							"id": 756,
							"name": "diagonal",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 757,
							"name": "direction",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 6,
								"name": "DirectionOneD"
							},
							"defaultValue": "\"ltr\""
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/ones-and-zeros/eye.ts",
					"line": 12,
					"character": 19
				}
			]
		},
		{
			"id": 771,
			"name": "flat",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 772,
					"name": "flat",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return a contiguous flattened array containing\nthe elements of the input"
					},
					"parameters": [
						{
							"id": 773,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Array to flat\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-manipulation/shape-changing/flat.ts",
					"line": 27,
					"character": 20
				}
			]
		},
		{
			"id": 829,
			"name": "floor",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 830,
					"name": "floor",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the floor of the input, element-wise."
					},
					"parameters": [
						{
							"id": 831,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Input array\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/mathematical/rounding/floor.ts",
					"line": 8,
					"character": 21
				}
			]
		},
		{
			"id": 803,
			"name": "fromFlat",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 804,
					"name": "fromFlat",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return array filled with values from flat array with\nspecified shape."
					},
					"typeParameter": [
						{
							"id": 805,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Type of collection elements"
							}
						}
					],
					"parameters": [
						{
							"id": 806,
							"name": "values",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Source data"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeParameter",
									"name": "T"
								}
							}
						},
						{
							"id": 807,
							"name": "sh",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 254,
								"name": "Shape"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/from-data/fromFlat.ts",
					"line": 15,
					"character": 24
				}
			]
		},
		{
			"id": 774,
			"name": "fromStringToChar",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 775,
					"name": "fromStringToChar",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A new 1-D array of chars initialized from text data in a string."
					},
					"parameters": [
						{
							"id": 776,
							"name": "str",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "String to convert\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/from-data/fromStringToChar.ts",
					"line": 10,
					"character": 32
				}
			]
		},
		{
			"id": 777,
			"name": "fromStringToNumber",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 778,
					"name": "fromStringToNumber",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A new 1-D array of numbers initialized from text data in a string."
					},
					"parameters": [
						{
							"id": 779,
							"name": "str",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "String to convert\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/from-data/fromStringToNumber.ts",
					"line": 10,
					"character": 34
				}
			]
		},
		{
			"id": 738,
			"name": "full",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 739,
					"name": "full",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return a new array of given shape filled\nwith `value`"
					},
					"typeParameter": [
						{
							"id": 740,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 741,
							"name": "sh",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 254,
								"name": "Shape"
							}
						},
						{
							"id": 742,
							"name": "fillValue",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/ones-and-zeros/full.ts",
					"line": 12,
					"character": 20
				}
			]
		},
		{
			"id": 733,
			"name": "generateFlat",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 734,
					"name": "generateFlat",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return one dimensional array filled with\nspecified value"
					},
					"typeParameter": [
						{
							"id": 735,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {
								"isExported": true
							}
						}
					],
					"parameters": [
						{
							"id": 736,
							"name": "length",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 737,
							"name": "fillValue",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeParameter",
							"name": "T"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/ones-and-zeros/generateFlat.ts",
					"line": 10,
					"character": 28
				}
			]
		},
		{
			"id": 815,
			"name": "getNumberOfFloatDecimals",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 816,
					"name": "getNumberOfFloatDecimals",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return number of decimals of float part"
					},
					"parameters": [
						{
							"id": 817,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Input data\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/mathematical/miscellaneous/getNumberOfFloatDecimals.ts",
					"line": 10,
					"character": 40
				}
			]
		},
		{
			"id": 758,
			"name": "identity",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 759,
					"name": "identity",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the identity array.\nThe identity array is a square array with ones on the main diagonal."
					},
					"parameters": [
						{
							"id": 760,
							"name": "rows",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 761,
							"name": "direction",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "\n"
							},
							"type": {
								"type": "reference",
								"id": 6,
								"name": "DirectionOneD"
							},
							"defaultValue": "\"ltr\""
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/ones-and-zeros/identity.ts",
					"line": 13,
					"character": 24
				}
			]
		},
		{
			"id": 812,
			"name": "isNumber",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 813,
					"name": "isNumber",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return `true` if input data is `number`"
					},
					"parameters": [
						{
							"id": 814,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Input data\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/mathematical/miscellaneous/isNumber.ts",
					"line": 8,
					"character": 24
				}
			]
		},
		{
			"id": 785,
			"name": "linspace",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 786,
					"name": "linspace",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return `num` spaced samples, calculated over the interval [`start`, `stop`]."
					},
					"parameters": [
						{
							"id": 787,
							"name": "start",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The starting value of the sequence"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 788,
							"name": "stop",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The end value of the sequence, unless `endPoint` is set to `false`.\nIn that case, the sequence consists of all but the last of num + 1 spaced samples,\nso that stop is excluded. Note that the step size changes when endpoint is `false`"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 789,
							"name": "num",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Number of samples to generate. Default is 50. Must be non-negative"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "50"
						},
						{
							"id": 790,
							"name": "endPoint",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "If `true`, stop is the last sample. Otherwise, it is not included. Default is `true`"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 791,
							"name": "retStep",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "If `true`, return step as the last element of resulting array,\nwhere step is the spacing between samples. Default is `false`\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/numerical-ranges/linspace.ts",
					"line": 17,
					"character": 24
				}
			]
		},
		{
			"id": 792,
			"name": "logspace",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 793,
					"name": "logspace",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return numbers spaced evenly on a log scale.\nIn linear space, the sequence starts at `base ^ start` (base to the power of start) and ends with `base ^ stop`"
					},
					"parameters": [
						{
							"id": 794,
							"name": "start",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The starting value of the sequence"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 795,
							"name": "stop",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The final value of the sequence"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 796,
							"name": "num",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Number of samples to generate. Default is 50. Must be non-negative"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "50"
						},
						{
							"id": 797,
							"name": "endPoint",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "If `true`, stop is the last sample. Otherwise, it is not included. Default is `true`"
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						},
						{
							"id": 798,
							"name": "base",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "The base of the log space. The step size between the elements in `ln(samples) / ln(base)`.\nDefault is 10\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "10"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/numerical-ranges/logspace.ts",
					"line": 16,
					"character": 24
				}
			]
		},
		{
			"id": 746,
			"name": "ones",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 747,
					"name": "ones",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return a new array of given shape filled\nwith `ones`"
					},
					"parameters": [
						{
							"id": 748,
							"name": "sh",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 254,
								"name": "Shape"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/ones-and-zeros/ones.ts",
					"line": 12,
					"character": 20
				}
			]
		},
		{
			"id": 799,
			"name": "reshape",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 800,
					"name": "reshape",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Gives a new shape to an array without changing its data."
					},
					"parameters": [
						{
							"id": 801,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Array to be reshaped"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 802,
							"name": "newShape",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "New shape\n"
							},
							"type": {
								"type": "reference",
								"id": 254,
								"name": "Shape"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-manipulation/shape-changing/reshape.ts",
					"line": 13,
					"character": 23
				}
			]
		},
		{
			"id": 832,
			"name": "rint",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 833,
					"name": "rint",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Round elements of the array to the nearest integer."
					},
					"parameters": [
						{
							"id": 834,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Input array\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/mathematical/rounding/rint.ts",
					"line": 8,
					"character": 20
				}
			]
		},
		{
			"id": 818,
			"name": "round",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 819,
					"name": "round",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Round to the given number of decimals."
					},
					"parameters": [
						{
							"id": 820,
							"name": "value",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Input data"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 821,
							"name": "decimals",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Number of decimal places to round to (default: 0).\nIf decimals is negative, it specifies the number of positions to the left of the decimal point.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/mathematical/rounding/round.ts",
					"line": 10,
					"character": 21
				}
			]
		},
		{
			"id": 765,
			"name": "shape",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 766,
					"name": "shape",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the shape of an array"
					},
					"parameters": [
						{
							"id": 767,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 254,
						"name": "Shape"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-manipulation/basic/shape.ts",
					"line": 11,
					"character": 21
				}
			]
		},
		{
			"id": 762,
			"name": "subArrayLength",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 763,
					"name": "subArrayLength",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Check that all sub arrays have the same length\nand return this length. Otherwise return -1"
					},
					"parameters": [
						{
							"id": 764,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Array to check\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-manipulation/basic/subArrayLength.ts",
					"line": 9,
					"character": 30
				}
			]
		},
		{
			"id": 835,
			"name": "trunc",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 836,
					"name": "trunc",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return the truncated value of the input, element-wise."
					},
					"parameters": [
						{
							"id": 837,
							"name": "arr",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"text": "Input array\n"
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/mathematical/rounding/trunc.ts",
					"line": 8,
					"character": 21
				}
			]
		},
		{
			"id": 749,
			"name": "zeros",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 750,
					"name": "zeros",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Return a new array of given shape filled\nwith `zeroes`"
					},
					"parameters": [
						{
							"id": 751,
							"name": "sh",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"id": 254,
								"name": "Shape"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "packages/core/src/operators/array-creation/ones-and-zeros/zeros.ts",
					"line": 12,
					"character": 21
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				1,
				7,
				15,
				18,
				254,
				490
			],
			"categories": [
				{
					"title": "Basic Types",
					"children": [
						1,
						7,
						15,
						18,
						254,
						490
					]
				}
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				6
			],
			"categories": [
				{
					"title": "Basic Types",
					"children": [
						6
					]
				}
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				780,
				822,
				826,
				808,
				743,
				752,
				771,
				829,
				803,
				774,
				777,
				738,
				733,
				815,
				758,
				812,
				785,
				792,
				746,
				799,
				832,
				818,
				765,
				762,
				835,
				749
			],
			"categories": [
				{
					"title": "Array Creation",
					"children": [
						780,
						743,
						752,
						803,
						774,
						777,
						738,
						733,
						758,
						785,
						792,
						746,
						749
					]
				},
				{
					"title": "Array Manipulation",
					"children": [
						771,
						799,
						765,
						762
					]
				},
				{
					"title": "Logic Comparision",
					"children": [
						808
					]
				},
				{
					"title": "Mathematical Rounding",
					"children": [
						822,
						826,
						829,
						832,
						818,
						835
					]
				},
				{
					"title": "Mathematical Miscellaneous",
					"children": [
						815,
						812
					]
				}
			]
		}
	]
}